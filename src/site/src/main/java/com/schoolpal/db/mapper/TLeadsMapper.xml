<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.schoolpal.db.inf.TLeadsMapper">
  <resultMap id="BaseResultMap" type="com.schoolpal.db.model.TLeads">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="course_type" jdbcType="VARCHAR" property="courseType" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="stage" jdbcType="INTEGER" property="stage" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="orgnization_id" jdbcType="CHAR" property="orgnizationId" />
    <result column="executive_id" jdbcType="CHAR" property="executiveId" />
    <result column="creator_id" jdbcType="CHAR" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, course_type, course_name, type, source, channel, stage, status, orgnization_id, 
    executive_id, creator_id, create_time, note
  </sql>
  <select id="selectByExample" parameterType="com.schoolpal.db.model.TLeadsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_leads
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_leads
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_leads
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.schoolpal.db.model.TLeadsExample">
    delete from t_leads
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.schoolpal.db.model.TLeads">
    insert into t_leads (id, course_type, course_name, 
      type, source, channel, 
      stage, status, orgnization_id, 
      executive_id, creator_id, create_time, 
      note)
    values (#{id,jdbcType=CHAR}, #{courseType,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{channel,jdbcType=INTEGER}, 
      #{stage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{orgnizationId,jdbcType=CHAR}, 
      #{executiveId,jdbcType=CHAR}, #{creatorId,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.schoolpal.db.model.TLeads">
    insert into t_leads
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orgnizationId != null">
        orgnization_id,
      </if>
      <if test="executiveId != null">
        executive_id,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orgnizationId != null">
        #{orgnizationId,jdbcType=CHAR},
      </if>
      <if test="executiveId != null">
        #{executiveId,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.schoolpal.db.model.TLeadsExample" resultType="java.lang.Long">
    select count(*) from t_leads
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_leads
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=INTEGER},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orgnizationId != null">
        orgnization_id = #{record.orgnizationId,jdbcType=CHAR},
      </if>
      <if test="record.executiveId != null">
        executive_id = #{record.executiveId,jdbcType=CHAR},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_leads
    set id = #{record.id,jdbcType=CHAR},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      source = #{record.source,jdbcType=INTEGER},
      channel = #{record.channel,jdbcType=INTEGER},
      stage = #{record.stage,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      orgnization_id = #{record.orgnizationId,jdbcType=CHAR},
      executive_id = #{record.executiveId,jdbcType=CHAR},
      creator_id = #{record.creatorId,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.schoolpal.db.model.TLeads">
    update t_leads
    <set>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orgnizationId != null">
        orgnization_id = #{orgnizationId,jdbcType=CHAR},
      </if>
      <if test="executiveId != null">
        executive_id = #{executiveId,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.schoolpal.db.model.TLeads">
    update t_leads
    set course_type = #{courseType,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      channel = #{channel,jdbcType=INTEGER},
      stage = #{stage,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      orgnization_id = #{orgnizationId,jdbcType=CHAR},
      executive_id = #{executiveId,jdbcType=CHAR},
      creator_id = #{creatorId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>